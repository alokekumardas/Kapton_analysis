# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/DBconfigure.ui'
#
# Created by: PyQt5 UI code generator 5.15.8
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import paramiko
print('paramiko.__version__ ', paramiko.__version__)
import yaml
print('yaml.__version__ ', yaml.__version__)
import os

class ConfigWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 530)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.label_SQL_user = QtWidgets.QLabel(self.centralwidget)
        self.label_SQL_user.setObjectName("label_SQL_user")
        self.gridLayout.addWidget(self.label_SQL_user, 2, 0, 1, 1)
        self.lineEdit_sql_port = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_sql_port.setObjectName("lineEdit_sql_port")
        self.gridLayout.addWidget(self.lineEdit_sql_port, 5, 1, 1, 1)
        self.label_ssh_keyloc = QtWidgets.QLabel(self.centralwidget)
        self.label_ssh_keyloc.setObjectName("label_ssh_keyloc")
        self.gridLayout.addWidget(self.label_ssh_keyloc, 12, 0, 1, 1)
        self.pushButton_sql_testConn = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_sql_testConn.setAutoFillBackground(True)
        self.pushButton_sql_testConn.setObjectName("pushButton_sql_testConn")
        self.gridLayout.addWidget(self.pushButton_sql_testConn, 7, 0, 1, 2)
        self.lineEdit_sql_host = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_sql_host.setObjectName("lineEdit_sql_host")
        self.gridLayout.addWidget(self.lineEdit_sql_host, 3, 1, 1, 1)
        self.pushButton_saveConfig = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_saveConfig.setObjectName("pushButton_saveConfig")
        self.gridLayout.addWidget(self.pushButton_saveConfig, 16, 0, 1, 2)
        self.label_ssh_headline = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_ssh_headline.setFont(font)
        self.label_ssh_headline.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ssh_headline.setObjectName("label_ssh_headline")
        self.gridLayout.addWidget(self.label_ssh_headline, 9, 0, 1, 2)
        self.lineEdit_sql_user = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_sql_user.setObjectName("lineEdit_sql_user")
        self.gridLayout.addWidget(self.lineEdit_sql_user, 2, 1, 1, 1)
        self.lineEdit_ssh_username = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ssh_username.setObjectName("lineEdit_ssh_username")
        self.gridLayout.addWidget(self.lineEdit_ssh_username, 11, 1, 1, 1)
        self.label_sql_password = QtWidgets.QLabel(self.centralwidget)
        self.label_sql_password.setObjectName("label_sql_password")
        self.gridLayout.addWidget(self.label_sql_password, 4, 0, 1, 1)
        self.pushButton_ssh_testConn = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_ssh_testConn.setObjectName("pushButton_ssh_testConn")
        self.gridLayout.addWidget(self.pushButton_ssh_testConn, 14, 0, 1, 2)
        self.lineEdit_ssh_keyLoc = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ssh_keyLoc.setObjectName("lineEdit_ssh_keyLoc")
        self.gridLayout.addWidget(self.lineEdit_ssh_keyLoc, 12, 1, 1, 1)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 15, 0, 1, 2)
        self.label_sql_host = QtWidgets.QLabel(self.centralwidget)
        self.label_sql_host.setObjectName("label_sql_host")
        self.gridLayout.addWidget(self.label_sql_host, 3, 0, 1, 1)
        self.lineEdit_sql_database = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_sql_database.setObjectName("lineEdit_sql_database")
        self.gridLayout.addWidget(self.lineEdit_sql_database, 6, 1, 1, 1)
        self.lineEdit_sql_password = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_sql_password.setObjectName("lineEdit_sql_password")
        self.gridLayout.addWidget(self.lineEdit_sql_password, 4, 1, 1, 1)
        self.label_sql_port = QtWidgets.QLabel(self.centralwidget)
        self.label_sql_port.setObjectName("label_sql_port")
        self.gridLayout.addWidget(self.label_sql_port, 5, 0, 1, 1)
        self.label_ssh_host = QtWidgets.QLabel(self.centralwidget)
        self.label_ssh_host.setObjectName("label_ssh_host")
        self.gridLayout.addWidget(self.label_ssh_host, 10, 0, 1, 1)
        self.label_sql_database = QtWidgets.QLabel(self.centralwidget)
        self.label_sql_database.setObjectName("label_sql_database")
        self.gridLayout.addWidget(self.label_sql_database, 6, 0, 1, 1)
        self.label_ssh_username = QtWidgets.QLabel(self.centralwidget)
        self.label_ssh_username.setObjectName("label_ssh_username")
        self.gridLayout.addWidget(self.label_ssh_username, 11, 0, 1, 1)
        self.label_SQL_headline = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_SQL_headline.setFont(font)
        self.label_SQL_headline.setAlignment(QtCore.Qt.AlignCenter)
        self.label_SQL_headline.setObjectName("label_SQL_headline")
        self.gridLayout.addWidget(self.label_SQL_headline, 0, 0, 1, 2)
        self.label_ssh_targetDir = QtWidgets.QLabel(self.centralwidget)
        self.label_ssh_targetDir.setObjectName("label_ssh_targetDir")
        self.gridLayout.addWidget(self.label_ssh_targetDir, 13, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 8, 0, 1, 2)
        self.lineEdit_ssh_targetDir = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ssh_targetDir.setObjectName("lineEdit_ssh_targetDir")
        self.gridLayout.addWidget(self.lineEdit_ssh_targetDir, 13, 1, 1, 1)
        self.lineEdit_ssh_host = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_ssh_host.setObjectName("lineEdit_ssh_host")
        self.gridLayout.addWidget(self.lineEdit_ssh_host, 10, 1, 1, 1)
        self.comboBox_sql_type = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_sql_type.setObjectName("comboBox_sql_type")
        self.comboBox_sql_type.addItem("")
        self.comboBox_sql_type.addItem("")
        self.gridLayout.addWidget(self.comboBox_sql_type, 1, 1, 1, 1)
        self.label_sql_type = QtWidgets.QLabel(self.centralwidget)
        self.label_sql_type.setObjectName("label_sql_type")
        self.gridLayout.addWidget(self.label_sql_type, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.activateUiFunctions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DB configuration"))
        self.label_SQL_user.setText(_translate("MainWindow", "Username"))
        self.label_ssh_keyloc.setText(_translate("MainWindow", "Location of SSH Key"))
        self.pushButton_sql_testConn.setText(_translate("MainWindow", "Test connection"))
        self.pushButton_saveConfig.setText(_translate("MainWindow", "Save configuration into yaml file"))
        self.label_ssh_headline.setText(_translate("MainWindow", "SSH Connection"))
        self.label_sql_password.setText(_translate("MainWindow", "Password"))
        self.pushButton_ssh_testConn.setText(_translate("MainWindow", "Test connection"))
        self.label_sql_host.setText(_translate("MainWindow", "Host"))
        self.label_sql_port.setText(_translate("MainWindow", "Port"))
        self.label_ssh_host.setText(_translate("MainWindow", "Host"))
        self.label_sql_database.setText(_translate("MainWindow", "Database"))
        self.label_ssh_username.setText(_translate("MainWindow", "Username"))
        self.label_SQL_headline.setText(_translate("MainWindow", "SQL Database"))
        self.label_ssh_targetDir.setText(_translate("MainWindow", "Target directory for scan image"))
        self.comboBox_sql_type.setItemText(0, _translate("MainWindow", "postgres"))
        self.comboBox_sql_type.setItemText(1, _translate("MainWindow", "mySQL"))
        self.label_sql_type.setText(_translate("MainWindow", "Database type"))

    def testSqlConfig(self):
        if(self.comboBox_sql_type.currentText()=='postgres'):
            import psycopg2 as sql
        else:
            import mysql.connector as sql

        try:
            sql.connect(database=self.lineEdit_sql_database.text(),
                                    host=self.lineEdit_sql_host.text(),
                                    port=self.lineEdit_sql_port.text(),
                                    user=self.lineEdit_sql_user.text(),
                                    password=self.lineEdit_sql_password.text())
            print("Successful database connection")
            self.pushButton_sql_testConn.setStyleSheet("background-color : green")

        except Exception as e:
            print("Failed database connection: {}".format(e))
            self.pushButton_sql_testConn.setStyleSheet("background-color : red")
        

    def testSshConfig(self):
        tmpSshConn = paramiko.SSHClient()
        tmpSshConn.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        try:
            lPKey = paramiko.Ed25519Key(filename=self.lineEdit_ssh_keyLoc.text())
            tmpSshConn.connect(hostname=self.lineEdit_ssh_host.text(),
                    username=self.lineEdit_ssh_username.text(),
                    pkey=lPKey
                    )
            print("Successful ssh connection")
            self.pushButton_ssh_testConn.setStyleSheet("background-color : green")
        except Exception as e:
            print("Failed ssh connection: {}".format(e))
            self.pushButton_ssh_testConn.setStyleSheet("background-color : red")

    def saveConfigToYaml(self):
        data = {"db_username" : self.lineEdit_sql_user.text(),
                "db_password" : self.lineEdit_sql_password.text(),
                "db_host" : self.lineEdit_sql_host.text(),
                "db_port" : self.lineEdit_sql_port.text(),
                "db_database" : self.lineEdit_sql_database.text(),
                "db_type" : self.comboBox_sql_type.currentText(),
                "ssh_host" : self.lineEdit_ssh_host.text(),
                "ssh_user" : self.lineEdit_ssh_username.text(),
                "ssh_locPKey" : self.lineEdit_ssh_keyLoc.text(),
                "ssh_db_imagePath" : self.lineEdit_ssh_targetDir.text()}
        outstream = open(os.path.join(os.path.curdir, 'dbConfig.yaml'),'w')
        yaml.dump(data,outstream)

    def activateUiFunctions(self):
        self.pushButton_sql_testConn.clicked.connect(self.testSqlConfig)
        self.pushButton_ssh_testConn.clicked.connect(self.testSshConfig)
        self.pushButton_saveConfig.clicked.connect(self.saveConfigToYaml)



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = ConfigWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())